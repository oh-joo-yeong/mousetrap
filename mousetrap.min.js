!(function (e, t, n) {
  if (e) {
    for (
      var r,
        i = {
          8: "backspace",
          9: "tab",
          13: "enter",
          16: "shift",
          17: "ctrl",
          18: "alt",
          20: "capslock",
          27: "esc",
          32: "space",
          33: "pageup",
          34: "pagedown",
          35: "end",
          36: "home",
          37: "left",
          38: "up",
          39: "right",
          40: "down",
          45: "ins",
          46: "del",
          91: "meta",
          93: "meta",
          224: "meta",
        },
        o = {
          106: "*",
          107: "+",
          109: "-",
          110: ".",
          111: "/",
          186: ";",
          187: "=",
          188: ",",
          189: "-",
          190: ".",
          191: "/",
          192: "`",
          219: "[",
          220: "\\",
          221: "]",
          222: "'",
        },
        a = {
          "~": "`",
          "!": "1",
          "@": "2",
          "#": "3",
          $: "4",
          "%": "5",
          "^": "6",
          "&": "7",
          "*": "8",
          "(": "9",
          ")": "0",
          _: "-",
          "+": "=",
          ":": ";",
          '"': "'",
          "<": ",",
          ">": ".",
          "?": "/",
          "|": "\\",
        },
        c = {
          option: "alt",
          command: "meta",
          return: "enter",
          escape: "esc",
          plus: "+",
          mod: /Mac|iPod|iPhone|iPad/.test(navigator.platform)
            ? "meta"
            : "ctrl",
        },
        s = 1;
      s < 20;
      ++s
    )
      i[111 + s] = "f" + s;
    for (s = 0; s <= 9; ++s) i[s + 96] = s.toString();
    (d.prototype.bind = function (e, t, n) {
      return (
        (e = e instanceof Array ? e : [e]),
        this._bindMultiple.call(this, e, t, n),
        this
      );
    }),
      (d.prototype.unbind = function (e, t) {
        return this.bind.call(this, e, function () {}, t);
      }),
      (d.prototype.trigger = function (e, t) {
        return (
          this._directMap[e + ":" + t] && this._directMap[e + ":" + t]({}, e),
          this
        );
      }),
      (d.prototype.reset = function () {
        var e = this;
        return (e._callbacks = {}), (e._directMap = {}), e;
      }),
      (d.prototype.stopCallback = function (e, n) {
        if (
          (" " + n.className + " ").indexOf(" mousetrap ") > -1 ||
          (function e(n, r) {
            return null !== n && n !== t && (n === r || e(n.parentNode, r));
          })(n, this.target)
        )
          return !1;
        if ("composedPath" in e && "function" == typeof e.composedPath) {
          var r = e.composedPath()[0];
          r !== e.target && (n = r);
        }
        return (
          "INPUT" == n.tagName ||
          "SELECT" == n.tagName ||
          "TEXTAREA" == n.tagName ||
          n.isContentEditable
        );
      }),
      (d.prototype.handleKey = function () {
        return this._handleKey.apply(this, arguments);
      }),
      (d.addKeycodes = function (e) {
        for (var t in e) e.hasOwnProperty(t) && (i[t] = e[t]);
        r = null;
      }),
      (d.init = function () {
        var e = d(t);
        for (var n in e)
          "_" !== n.charAt(0) &&
            (d[n] = (function (t) {
              return function () {
                return e[t].apply(e, arguments);
              };
            })(n));
      }),
      d.init(),
      (e.Mousetrap = d),
      "undefined" != typeof module && module.exports && (module.exports = d),
      "function" == typeof define &&
        define.amd &&
        define(function () {
          return d;
        });
  }
  function l(e, t, n) {
    if (e.addEventListener) {
      e.addEventListener(t, n, !1);
      return;
    }
    e.attachEvent("on" + t, n);
  }
  function u(e, t, n) {
    if (e.removeEventListener) {
      e.removeEventListener(t, n, !1);
      return;
    }
    e.detachEvent("on" + t, n);
  }
  function f(e) {
    if ("keypress" == e.type) {
      var t = String.fromCharCode(e.which);
      return e.shiftKey || (t = t.toLowerCase()), t;
    }
    return i[e.which]
      ? i[e.which]
      : o[e.which]
      ? o[e.which]
      : String.fromCharCode(e.which).toLowerCase();
  }
  function p(e, t) {
    return e.sort().join(",") === t.sort().join(",");
  }
  function h(e) {
    return "shift" == e || "ctrl" == e || "alt" == e || "meta" == e;
  }
  function y(e, t) {
    var n,
      o,
      s,
      l,
      u,
      f,
      p,
      y = [];
    for (
      f = 0,
        l =
          "+" === (p = e)
            ? ["+"]
            : (p = p.replace(/\+{2}/g, "+plus")).split("+");
      f < l.length;
      ++f
    )
      c[(u = l[f])] && (u = c[u]),
        t && "keypress" != t && a[u] && ((u = a[u]), y.push("shift")),
        h(u) && y.push(u);
    return (
      (t =
        ((n = u),
        (o = y),
        (s = t) ||
          (s = (function e() {
            if (!r)
              for (var t in ((r = {}), i))
                (!(t > 95) || !(t < 112)) &&
                  i.hasOwnProperty(t) &&
                  (r[i[t]] = t);
            return r;
          })()[n]
            ? "keydown"
            : "keypress"),
        "keypress" == s && o.length && (s = "keydown"),
        s)),
      { key: u, modifiers: y, action: t }
    );
  }
  function d(e) {
    var n,
      r = this;
    if (((e = e || t), !(r instanceof d))) return new d(e);
    (r.target = e), (r._callbacks = {}), (r._directMap = {});
    var i = {},
      o = !1,
      a = !1,
      c = !1;
    function s(e) {
      e = e || {};
      var t,
        n = !1;
      for (t in i) {
        if (e[t]) {
          n = !0;
          continue;
        }
        i[t] = 0;
      }
      n || (c = !1);
    }
    function u(e, t, n, o, a, c) {
      var s,
        l,
        u = [],
        f = n.type;
      if (!r._callbacks[e]) return [];
      for (
        "keyup" == f && h(e) && (t = [e]), s = 0;
        s < r._callbacks[e].length;
        ++s
      )
        if (
          ((l = r._callbacks[e][s]),
          (o || !l.seq || i[l.seq] == l.level) &&
            f == l.action &&
            (("keypress" == f && !n.metaKey && !n.ctrlKey) ||
              p(t, l.modifiers)))
        ) {
          var y = !o && l.combo == a,
            d = o && l.seq == o && l.level == c;
          (y || d) && r._callbacks[e].splice(s, 1), u.push(l);
        }
      return u;
    }
    function _(e, t, n, i) {
      !r.stopCallback(t, t.target || t.srcElement, n, i) &&
        !1 === e(t, n) &&
        ((function e(t) {
          if (t.preventDefault) {
            t.preventDefault();
            return;
          }
          t.returnValue = !1;
        })(t),
        (function e(t) {
          if (t.stopPropagation) {
            t.stopPropagation();
            return;
          }
          t.cancelBubble = !0;
        })(t));
    }
    function v(e, t, a, l, p) {
      r._directMap[e + ":" + a] = t;
      var h,
        d = (e = e.replace(/\s+/g, " ")).split(" ");
      if (d.length > 1) {
        !(function e(t, r, a, l) {
          function u(e) {
            return function () {
              (c = e), ++i[t], clearTimeout(n), (n = setTimeout(s, 1e3));
            };
          }
          function p(e) {
            _(a, e, t), "keyup" !== l && (o = f(e)), setTimeout(s, 10);
          }
          i[t] = 0;
          for (var h = 0; h < r.length; ++h) {
            var d = h + 1 === r.length ? p : u(l || y(r[h + 1]).action);
            v(r[h], d, l, t, h);
          }
        })(e, d, t, a);
        return;
      }
      (h = y(e, a)),
        (r._callbacks[h.key] = r._callbacks[h.key] || []),
        u(h.key, h.modifiers, { type: h.action }, l, e, p),
        r._callbacks[h.key][l ? "unshift" : "push"]({
          callback: t,
          modifiers: h.modifiers,
          action: h.action,
          seq: l,
          level: p,
          combo: e,
        });
    }
    (r._handleKey = function (e, t, n) {
      var r,
        i = u(e, t, n),
        o = {},
        l = 0,
        f = !1;
      for (r = 0; r < i.length; ++r) i[r].seq && (l = Math.max(l, i[r].level));
      for (r = 0; r < i.length; ++r) {
        if (i[r].seq) {
          if (i[r].level != l) continue;
          (f = !0),
            (o[i[r].seq] = 1),
            _(i[r].callback, n, i[r].combo, i[r].seq);
          continue;
        }
        f || _(i[r].callback, n, i[r].combo);
      }
      var p = "keypress" == n.type && a;
      n.type != c || h(e) || p || s(o), (a = f && "keydown" == n.type);
    }),
      (r._bindMultiple = function (e, t, n) {
        for (var r = 0; r < e.length; ++r) v(e[r], t, n);
      }),
      (r._handleKeyEvent = function (e) {
        "number" != typeof e.which && (e.which = e.keyCode);
        var t,
          n,
          i = f(e);
        if (i) {
          if ("keyup" == e.type && o === i) {
            o = !1;
            return;
          }
          r.handleKey(
            i,
            ((n = []),
            (t = e).shiftKey && n.push("shift"),
            t.altKey && n.push("alt"),
            t.ctrlKey && n.push("ctrl"),
            t.metaKey && n.push("meta"),
            n),
            e
          );
        }
      }),
      l(e, "keypress", r._handleKeyEvent),
      l(e, "keydown", r._handleKeyEvent),
      l(e, "keyup", r._handleKeyEvent);
  }
})(
  "undefined" != typeof window ? window : null,
  "undefined" != typeof window ? document : null
),
  (Mousetrap.prototype.destroy = function () {
    var e = this;
    e.reset(),
      _removeEvent(e.target, "keypress", e._handleKeyEvent),
      _removeEvent(e.target, "keydown", e._handleKeyEvent),
      _removeEvent(e.target, "keyup", e._handleKeyEvent),
      (e.target = void 0),
      (e._handleKeyEvent = void 0);
  });
